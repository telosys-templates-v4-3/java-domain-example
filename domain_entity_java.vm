/*
 * Java domain class for entity "${entity.name}" 
 * Created on $now.date ( $now.time )
 * Generated by $generator.name ( version $generator.version )
 */
package ${target.javaPackageFromFolder(${SRC})};

import java.io.Serializable;

#foreach( $import in $java.imports($entity) )
import $import;
#end
/**
 * Domain class for entity "${entity.name}"
 *
 * @author Telosys
 *
 */
public class ${entity.name} implements Serializable {

    private static final long serialVersionUID = 1L;

    //--- ENTITY ATTRIBUTES 
#foreach( $attribute in $entity.keyAttributes )
    private $attribute.formattedType(10) $attribute.name #if($attribute.hasInitialValue())= ${attribute.ini} #end;
#end
#foreach( $attribute in $entity.nonKeyAttributes )
    private $attribute.formattedType(10) $attribute.name #if($attribute.hasInitialValue())= ${attribute.ini} #end;
#end
#if ( $entity.hasLinks() )
    //--- ENTITY LINKS ( RELATIONSHIP )
$___#foreach( $link in $entity.links )
    private ${link.formattedFieldType(10)} $link.fieldName ; 
$___#end
#end

    /**
     * Constructor
     */
    public ${entity.name}() {
		super();
    }

     //--- GETTERS & SETTERS FOR ATTRIBUTES
#foreach( $attribute in $entity.keyAttributes )
    public void ${attribute.setter}( $attribute.type $attribute.name ) {
        this.$attribute.name = $attribute.name ;
    }
    public $attribute.type ${attribute.getter}() {
        return this.$attribute.name;
    }

#end
#foreach( $attribute in $entity.nonKeyAttributes )
    public void ${attribute.setter}( $attribute.type $attribute.name ) {
        this.$attribute.name = $attribute.name ;
    }
    public $attribute.type ${attribute.getter}() {
        return this.$attribute.name;
    }

#end
#if ( $entity.hasLinks() )
    //--- GETTERS FOR LINKS
$___#foreach( $link in $entity.links )
    public $link.fieldType ${link.getter}() {
        return this.$link.fieldName;
    } 
$___#end
#end

##--- toString specific method
	@Override
## This function generates a 'toString()' method with indentation level = 1 (1 tab)
$java.toStringMethod($entity, 1)
}
